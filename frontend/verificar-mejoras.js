#!/usr/bin/env node

/**
 * Script de verificaci√≥n para las mejoras del Registro de Producci√≥n
 * Verifica que las cards sean m√°s compactas y la validaci√≥n funcione correctamente
 */

import { readFileSync } from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

console.log('üéØ Verificaci√≥n de Mejoras - Registro de Producci√≥n');
console.log('='.repeat(60));

try {
  const componentPath = path.join(__dirname, 'src', 'components', 'RegistroProduccion.jsx');
  const content = readFileSync(componentPath, 'utf8');

  console.log('\n‚úÖ Verificando Cards Compactas:');
  
  // Verificar padding reducido
  if (content.includes('p-4 border-l-4')) {
    console.log('   ‚úì Padding de card reducido de p-6 a p-4');
  } else {
    console.log('   ‚úó Padding de card no reducido');
  }

  // Verificar espaciado reducido
  if (content.includes('space-y-3')) {
    console.log('   ‚úì Espaciado interno reducido de space-y-4 a space-y-3');
  } else {
    console.log('   ‚úó Espaciado interno no reducido');
  }

  // Verificar tama√±os de texto m√°s peque√±os
  if (content.includes('text-xs font-medium')) {
    console.log('   ‚úì Labels con texto m√°s peque√±o (text-xs)');
  } else {
    console.log('   ‚úó Labels no reducidas');
  }

  // Verificar altura de inputs reducida
  if (content.includes('h-9 text-sm')) {
    console.log('   ‚úì Inputs con altura reducida (h-9) y texto peque√±o');
  } else {
    console.log('   ‚úó Inputs no optimizados');
  }

  // Verificar indicadores visuales m√°s peque√±os
  if (content.includes('w-1.5 h-1.5')) {
    console.log('   ‚úì Indicadores rojos m√°s peque√±os');
  } else {
    console.log('   ‚úó Indicadores rojos no reducidos');
  }

  console.log('\n‚úÖ Verificando Validaci√≥n Mejorada:');
  
  // Verificar validaci√≥n detallada
  if (content.includes('camposFaltantes = []')) {
    console.log('   ‚úì Array para campos faltantes implementado');
  } else {
    console.log('   ‚úó Array para campos faltantes no encontrado');
  }

  // Verificar mensaje de error espec√≠fico
  if (content.includes('camposFaltantes.join(\', \')')) {
    console.log('   ‚úì Mensaje de error espec√≠fico con campos faltantes');
  } else {
    console.log('   ‚úó Mensaje de error espec√≠fico no implementado');
  }
  // Verificar validaci√≥n de procesos
  if (content.includes('actividad.procesos.length === 0')) {
    console.log('   ‚úì Validaci√≥n de procesos mejorada');
  } else {
    console.log('   ‚úó Validaci√≥n de procesos no encontrada');
  }
  // Verificar validaci√≥n de insumos obligatorios
  if (content.includes('actividad.insumos.length === 0')) {
    console.log('   ‚úì Validaci√≥n de insumos como campo obligatorio');
  } else {
    console.log('   ‚úó Validaci√≥n de insumos obligatorios no encontrada');
  }

  // Verificar que el label de insumos sea obligatorio
  if (content.includes('Insumo(s) *')) {
    console.log('   ‚úì Label de insumos marcado como obligatorio');
  } else {
    console.log('   ‚úó Label de insumos no marcado como obligatorio');
  }

  console.log('\n‚úÖ Verificando Componentes UI Compactos:');
  
  // Verificar select compacto
  if (content.includes('minHeight: \'36px\'')) {
    console.log('   ‚úì Selects con altura m√≠nima reducida');
  } else {
    console.log('   ‚úó Selects no optimizados');
  }

  // Verificar botones compactos
  if (content.includes('h-9 px-4 text-sm')) {
    console.log('   ‚úì Bot√≥n individual m√°s compacto');
  } else {
    console.log('   ‚úó Bot√≥n individual no optimizado');
  }

  if (content.includes('h-10')) {
    console.log('   ‚úì Bot√≥n principal con altura ajustada');
  } else {
    console.log('   ‚úó Bot√≥n principal no ajustado');
  }

  // Verificar √≠conos m√°s peque√±os
  if (content.includes('w-3 h-3')) {
    console.log('   ‚úì √çconos m√°s peque√±os en botones');
  } else {
    console.log('   ‚úó √çconos no reducidos');
  }

  console.log('\n‚úÖ Verificando Textarea Compacta:');
  
  if (content.includes('rows={2}')) {
    console.log('   ‚úì Textarea de observaciones m√°s compacta (2 filas)');
  } else {
    console.log('   ‚úó Textarea no optimizada');
  }

  console.log('\n‚úÖ Verificando Responsive Design:');
  
  if (content.includes('hidden sm:inline')) {
    console.log('   ‚úì Texto "Cruza medianoche" oculto en m√≥vil');
  } else {
    console.log('   ‚úó Optimizaci√≥n m√≥vil no implementada');
  }

  console.log('\nüìä Resumen de Mejoras:');
  console.log('   ‚Ä¢ Cards m√°s compactas con menos padding');
  console.log('   ‚Ä¢ Inputs y selects m√°s peque√±os');
  console.log('   ‚Ä¢ Labels y texto reducido para mejor densidad');
  console.log('   ‚Ä¢ Validaci√≥n espec√≠fica de campos faltantes');
  console.log('   ‚Ä¢ Botones m√°s compactos y proporcionales');
  console.log('   ‚Ä¢ √çconos y elementos visuales optimizados');
  console.log('   ‚Ä¢ Mejor responsive en dispositivos m√≥viles');

  console.log('\nüéØ Casos de Prueba Sugeridos:');
  console.log('   1. Crear actividad sin llenar campos obligatorios');
  console.log('   2. Presionar "Guardar Actividad Individual"');
  console.log('   3. Verificar que muestre campos espec√≠ficos faltantes');
  console.log('   4. Comprobar que las cards ocupen menos espacio');
  console.log('   5. Probar en dispositivos m√≥viles');

  console.log('\n‚úÖ MEJORAS IMPLEMENTADAS EXITOSAMENTE!');

} catch (error) {
  console.error('‚ùå Error verificando mejoras:', error.message);
  process.exit(1);
}
